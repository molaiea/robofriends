{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","serviceWorker.js","index.js","robots.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","username","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c60560b.chunk.js","sourcesContent":["import React from 'react';\nconst Card = (props)=>{\n\treturn (\n\t\t<div className ='tc bg-washed-green dib br3 pa3 ma2 grow  bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${props.id}?200x200`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{props.name}</h2>\n\t\t\t\t<p>{props.email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList =({robots})=>{\n\treturn (\n\t\t<div> \n\t\t{\n\t\trobots.map((user, i)=> {\n\t\t\treturn(\n\t\t <Card key={i} \n\t\tid={robots[i].id} \n\t\tname={robots[i].name} \n\t\temail={robots[i].email}/>\n\t\t);\n\t})\n\t}\n\t\t</div>\n\n\t\t)\n}\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn(\n\t\t<div className='pa2'>\n\t\t<input\n\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\ttype='search'\n\t\tplaceholder='search robots'\n\t\tonChange={searchChange}/>\n\t\t</div>\n\t)\n}\nexport default SearchBox;","import React from 'react';\nconst Scroll = (props)=>{\n\treturn (\n\t\t<div style={{ overflowY: 'scroll' , border:'1px solid black', height:'800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({hasError: true})\n\t}\n\trender(){\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>ooooops</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport {robots} from '../robots';\nimport SearchBox from '../components/SearchBox';\nimport './App.css'\nimport Scroll from '../components/Scroll.js'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trobots : [],\n\t\t\tsearchfield : ''\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users => {this.setState({ robots: users})});\n\t}\n\tonSearchChange=(event)=>{\n\t\tthis.setState({ searchfield : event.target.value})\n\t\t\n\t}\n\trender(){\n\t\tconst {robots, searchfield} = this.state;\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t})\n\t\treturn !robots.length ? \n\t    <h1 className='tc f1'>Loading</h1> :\n\t\t(\n\t\t<div className='tc'>\n\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t<Scroll>\n\t\t\t<ErrorBoundry>\n\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t</ErrorBoundry>\n\t\t</Scroll>\n\t\t</div>\n\t\t);\n\t}\n\t\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport {robots} from './robots';\n\nReactDOM.render(\n\t\t<App robots={robots}/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n"],"sourceRoot":""}